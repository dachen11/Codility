/*
Attempt 1: 100%
Fairly similar to FrogRiverOne.
I was a little worried about the repeating case, but then I remembered that it's not possible for a number to repeat and still be a permutation.
Took a little troubleshooting for me to realize that Array "A" does not contain the value 0.
*/

// you can also use imports, for example:
 import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int solution(int[] A) {
        // Implement your solution here
        HashSet<Integer> thing = new HashSet<>();
        for(int i = 1; i <= A.length; i++) {
            thing.add(i);
        }
        for(int i = 0; i < A.length; i++) {
            
            thing.remove(A[i]);
        }
        if(thing.isEmpty()) {
            return 1;
        }
        return 0;
    }
}
